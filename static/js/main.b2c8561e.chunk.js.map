{"version":3,"sources":["Types/EnumSort.ts","App.tsx","index.tsx"],"names":["EnumSort","goodsFromServer","App","useState","DEFAULT","typeSort","setSort","isReverse","setIsReverse","visibleGoods","goods","reverse","cloneGoods","ALFABET_SORT","sort","a","b","localeCompare","WORD_LENGTH_SORT","length","sortWithRevers","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,6EAAAA,K,uBAAAA,E,8BAAAA,E,YAAAA,M,gBCMCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyBK,IAAMC,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,SAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAzBR,SAAwBC,EAAgBL,EAAmBM,GACzD,IAAIC,EAAU,YAAOF,GAErB,OAAQL,GACN,KAAKL,EAASa,aACZD,EAAWE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC3C,MACF,KAAKhB,EAASkB,iBACZN,EAAWE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,UACxC,MACF,QACEP,EAAU,YAAOF,GAQrB,OAJIC,GACFC,EAAWD,UAGNC,EAMcQ,CAAenB,EAAiBI,EAAUE,GAQ/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYlB,IAAaL,EAASa,eACtCW,QAAS,kBAAMlB,EAAQN,EAASa,eAJlC,iCASA,wBACES,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYlB,IAAaL,EAASkB,mBACtCM,QAAS,kBAAMlB,EAAQN,EAASkB,mBAJlC,4BASA,wBACEI,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAahB,IACrDiB,QAAS,kBA5BXhB,GADU,IAAdD,IA0BI,qBAQCF,EAASc,OAAS,GAAKZ,EAEpB,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAQN,EAASI,SACjBI,GAAa,IALjB,mBAUE,MAGR,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9F3CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2c8561e.chunk.js","sourcesContent":["export enum EnumSort {\n  ALFABET_SORT = 'alfabet',\n  WORD_LENGTH_SORT = 'wordlength',\n  DEFAULT = '',\n}\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { EnumSort } from './Types/EnumSort';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sortWithRevers(goods:string[], typeSort:EnumSort, reverse:boolean) {\n  let cloneGoods = [...goods];\n\n  switch (typeSort) {\n    case EnumSort.ALFABET_SORT:\n      cloneGoods.sort((a, b) => (a.localeCompare(b)));\n      break;\n    case EnumSort.WORD_LENGTH_SORT:\n      cloneGoods.sort((a, b) => (a.length - b.length));\n      break;\n    default:\n      cloneGoods = [...goods];\n      break;\n  }\n\n  if (reverse) {\n    cloneGoods.reverse();\n  }\n\n  return cloneGoods;\n}\n\nexport const App: React.FC = () => {\n  const [typeSort, setSort] = useState(EnumSort.DEFAULT);\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = sortWithRevers(goodsFromServer, typeSort, isReverse);\n\n  const reversList = () => (\n    isReverse === false\n      ? setIsReverse(true)\n      : setIsReverse(false)\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': typeSort !== EnumSort.ALFABET_SORT })}\n          onClick={() => setSort(EnumSort.ALFABET_SORT)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': typeSort !== EnumSort.WORD_LENGTH_SORT })}\n          onClick={() => setSort(EnumSort.WORD_LENGTH_SORT)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReverse })}\n          onClick={() => reversList()}\n\n        >\n          Reverse\n        </button>\n        {typeSort.length > 0 || isReverse\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSort(EnumSort.DEFAULT);\n                setIsReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          ) : ''}\n\n      </div>\n      <ul>\n        {visibleGoods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}